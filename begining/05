
class Solution {
public:
    vector<int> bottomView(Node *root) {
        vector<int> result;
        if (!root) return result;
        
        map<int, int> hdNodeMap;
        
        queue<pair<Node*, int>> q;
        q.push({root, 0});
        
        while (!q.empty()) {
            auto node = q.front().first;
            int hd = q.front().second;
            q.pop();
            
            hdNodeMap[hd] = node->data;
            if (node->left) q.push({node->left, hd - 1});
            if (node->right) q.push({node->right, hd + 1});
        }
        
        for (auto it : hdNodeMap) {
            result.push_back(it.second);
        }
        
        return result;
    }
};
