class Solution {
  public:
    void nextPermutation(vector<int>& arr) {
        
        //get the breakpoint
        
        int n = arr.size();
        
        int breakPoint = -1;
        
        for(int i=n-1; i>0; i--){
            if(arr[i-1]<arr[i]){
                breakPoint=i-1;
                break;
            }
        }
        
        //if no breakpoint is found means the array is at the last permutation
        //in this case we can revert to first permutation
        if(breakPoint==-1){
         reverse(arr.begin(), arr.end());
         return;
        }
        
        
        //find the first greatest number which is greater than breakPoint element
        for(int i = n-1; i>breakPoint; i--){
            if(arr[i]>arr[breakPoint]){
                swap(arr[i], arr[breakPoint]);
                break;
            }
        }
        
        //reversing the last array 
        reverse(arr.begin()+breakPoint+1, arr.end());
        
            
    }
};
